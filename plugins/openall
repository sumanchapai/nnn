#!/usr/bin/env bash

# Description: Open selected files 
#
# Notes: 1. Opens the hovered file if the selection is empty
#        2. Tries to oepn with $EDITOR, falls back to nuke
#        3. If $EDITOR is vi or vim, open files in tabs
#           Else: Opener is invoked once for each file in a loop
#           Keep pressing "Enter" to open files one by one
#
# Shell: bash


sel=${NNN_SEL:-${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.selection}

if [[ -z "$EDITOR" ]]; then
    # Default editor
    OPENER="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/plugins/nuke"
else
    # Use $EDITOR if set
    OPENER="$EDITOR"
fi


if [ -s "$sel" ]; then
    targets=()
    while IFS= read -r -d '' entry || [ -n "$entry" ]; do
        targets+=( "$entry" )
    done < "$sel"

    elements=${#targets[@]}

    if (( elements == 1 )); then
        # If there's only one file selected, open without prompts
        "$OPENER" "${targets[0]}"
    else
        # Open all files in tabs if editor is vim or vi
        if [ "$OPENER" == "vim" ] || [ "$OPENER" == "vi" ]; then
            $OPENER -p "${targets[@]}"
        else
            echo  
            printf "open [A]ll? "
            read -r all

            for ((index=0; index <= ${#targets[@]}; index++)); do
                "$OPENER" "${targets[index]}"
                if [ "$all" != "A" ] && (( index+1 < elements )); then
                    printf "press Enter to open '%s'\n" "${targets[index+1]}"
                    read -r -s -n 1 key
                    if [[ $key != "" ]]; then
                        break
                    fi
                fi
            done
            fi
    fi

    # Clear selection
    if [ -s "$sel" ] && [ -p "$NNN_PIPE" ]; then
        printf "-" > "$NNN_PIPE"
    fi
elif [ -n "$1" ]; then
    "$OPENER" "$1"
fi
